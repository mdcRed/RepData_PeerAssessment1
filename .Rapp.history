library(rattle)
rattle()
install.packages("RGtk2")
install.packages(rattle)
install.packages(rattle")
""
install.packages("rattle")
library(rattle)
rattle()
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
exit
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
3
2
info()
3/36
1-(3/36)
deck
1/52
1/16
52
1/52
1/4
4/52
5*4*3*2*1
info()
0
3/52
12/52
3/51
2/51
(1.6*.5)/2
(1.6*.8)/2
0.64
mypdf
mypdf(1.6)
integrate(mypdf,0,1.6)
((1.6^2)/4)/2
sqrt(2)
(.997)*(1-.985)
.997*(.001)
.985*(1-0.001)
(1-.985)*(1-0.001)
((.997)*(1-.985))/ (((1-.985)*(1-0.001))+((.997)*(1-.985)))
((.997)*(1-.985))/ (((1-.985)*(1-0.001))+((1-.001)*(1-.985)))
((.997)*(0.001))/ (((.997)*(0.001))+((1-.001)*(1-.985)))
1/2
(1+2+3+4+5+6)/6
expect_dice
dice_high()
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
myfunc(0,2)
myfunc
integrate(myfunc, 0,2)
spop
mean(spop)
allsam
apply(allsam,1, mean)
smeans
mean(smeans)
dice_sqr
ex2_fair <- sum (dice_sqr * dice_fair)
ex2_fair - 3.5
(ex2_fair-3.5)^2
ex2_fair -(3.5^2)
ex2_fair - 3.5^2
sum (dice_sqr * dice_fair) - 3.5^2
sum (dice_sqr * dice_high) - 3.5^2
sum (dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
(sd(apply(matrix(runif(10000),1000),1,mean)))^2
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3) * (0.8)^3 + choose(5,2) * (0.2)^2
info()
choose(5,3)*(.8)^3 * (.2)^2 + choose(5,4)*(.8)^4 * (.2)^1 + choose(5,5) * (.8)^5 * (.2)^0
pbinom help
help (binomial)
help (pbinom)
pbinom(2, size=5, prop=.8, lower.tail=FALSE)
pbinom(2, size=5,  lower.tail=FALSE)
pbinom(q=2, size=5, prop=.8, lower.tail=FALSE)
info()
skip()
help(qnorm)
pnorm(10)
qnorm(.1)
skip()
help (qnorm)
qnorm(.975, mean=3, sd=2, lower.tail=FALSE)
qnorm(.975, mean=3, sd=2)
1.96 * 2 + 3
pnorm(q=12, mean=1020, sd=50)
pnorm(q=12, mean=1020, sd=50, lower.tail=FALSE)
pnorm(q=1200, mean=1020, sd=50, lower.tail=FALSE)
skip()
qnorm(p=.75, , mean=1020, sd=50, lower.Tail=TRUE)
qnorm(p=.75, , mean=1020, sd=50, lower.tail=TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
help (ppois)
ppois(q=3, lambda=2.5)
ppois(q=3, 4*2.5)
help (pbinom)
pbinom(5/1000,size=1000, prob=.01)
pbinorm(5, 1000, .01)
pbinom(5, 1000, .01)
ppois (5, 1000*5)
ppois(5, 1000*0.01)
skip()
coinPlot(10)
coinPlot(10000)
skip()
skip()
skip()
skip()
skip()
l
5/94.32
lamb <- 5/94.32
skip()
quit()
skip()
coinPlot(10)
coinPlot(10000)
qnorm(.95)
v
qnorm(.975)*sqrt(p'(1-p')/100)
skip()
skip()
skip()
ACCompar(20)
lamb<- 5/94.32
skip()
skip()
coinPlot(10)
coinPlot(10000)
qnorm(.95)
qnorm(.975)*sqrt(1.96(1-1.96)/100)
qnorm(.975)*sqrt(.60(1-.60)/100)
1.96 +/- qnorm(.975)*sqrt(.60(1-.60)/100)
qnorm(.975)*sqrt(2(1-2)/100)
qnorm(.975)*sqrt(.6*(1-.6)/100)
.6 + c(-1,1) *qnorm(.975)*sqrt(.6*.4/100)
x$conf
info()
binom.test(help)
binom.text help
help binom.test
bi
binom.test(c(-1,1), 60)
binom.test(c(60,100)
)
binom.test(60,100)$conf.int
mywald
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
1/lamb + c(-1,1)*qnorm(.975)*sqrt(1/lamb^2)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
myplot(2)
mplot(20)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep now
sleep
range(g1)
range(g2)
v <- g1 - g2
difference <- g2-g1
mean(difference)
sd (difference)
s <- sd(difference)
mn
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)
t.test(difference)$conf.int
(n_x-1)(S_x)^2+(n_y-1)(S_y)^2
(8-132.86)*(15.34)^2 + (21-127.44)*(18.23)^2
sp <- 7*15.34^2 + 20*18.23^2
*+21-2
8+21-2
ns <- 27
sp / ns
sp <- sqrt(sp/ns)
7*15.34^2 + 20*18.23^2 + c(-1,1)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <-
10 +10 -2
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp * sqrt(sum (1/10, 1/10))
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test()$conf.int
t.test()$conf
t.test(g2,g1)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
8+21
num <- (15.34^2/8 + 18.23^2/21)^2
* + 21
8 + 21
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
num/den
mydf <- num/den
num/den
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 +#
 18.23^2/21)
1
2
t.test(.95, 16)
(32-30)/(10/sqrt(16))
16
15
qt(.95, 15)
dim(fs)
t.test(fs$sheight ~ fs$fheight)
t.test(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
t.test(q=2.5, df=15, lower.tail=FALSE)
pt
pt (q=2.5, df=15, lower.tail=FALSE)
install packages (zipcode)
setwd("~/Documents/Coursera/ReproR/GitTest/RepData_PeerAssessment1")
exit
exit
